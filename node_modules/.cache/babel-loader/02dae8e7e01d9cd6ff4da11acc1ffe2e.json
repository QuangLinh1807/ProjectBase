{"ast":null,"code":"import { renderSlot as _renderSlot, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-85dec040\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"id\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Item = _resolveComponent(\"Item\");\n\n  return _openBlock(), _createElementBlock(\"div\", {\n    id: $props.id,\n    class: \"dropdown\"\n  }, [_createElementVNode(\"button\", {\n    class: _normalizeClass([\"btn\", $data.classList]),\n    onClick: _cache[0] || (_cache[0] = $event => $data.isOpen = !$data.isOpen)\n  }, [_renderSlot(_ctx.$slots, \"default\", {}, undefined, true)], 2\n  /* CLASS */\n  ), $data.isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass([\"dropdown-list\", $data.classList])\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.arrays, (item, index) => {\n    return _openBlock(), _createBlock(_component_Item, {\n      key: index,\n      item: item,\n      closeDropdown: $options.callToClose,\n      valueActive: _ctx.valueActive,\n      onChangeValue: $options.changeValue,\n      statusColor: $props.statusColor\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(item.text), 1\n      /* TEXT */\n      )]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"item\", \"closeDropdown\", \"valueActive\", \"onChangeValue\", \"statusColor\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))], 2\n  /* CLASS */\n  )) : _createCommentVNode(\"v-if\", true)], 8\n  /* PROPS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;;;;;;uBACEA,oBAiBM,KAjBN,EAiBM;IAjBAC,EAAE,EAAEC,SAiBJ;IAjBQC,KAAK,EAAC;EAiBd,CAjBN,GACEC,oBAES,QAFT,EAES;IAFDD,KAAK,mBAAC,KAAD,EAAeE,eAAf,EAEJ;IAF+BC,OAAK,sCAAED,eAAM,CAAIA,YAAZ;EAEpC,CAFT,GACEE,YAAQC,WAAR,EAAQ,SAAR,EAAQ,EAAR,EAAQC,SAAR,EAAQ,IAAR,EADF;;EAAA,GAGoDJ,8BAApDL,oBAYM,KAZN,EAYM;UAAA;IAZDG,KAAK,mBAAC,eAAD,EAAyBE,eAAzB;EAYJ,CAZN,sBACEL,oBAUOU,SAVP,EAUO,IAVP,EAUOC,YATmBT,aASnB,EATyB,CAAtBU,IAAsB,EAAhBC,KAAgB,KAAX;yBADrBC,aAUOC,eAVP,EAUO;MARJC,GAAG,EAAEH,KAQD;MAPJD,IAAI,EAAEA,IAOF;MANJK,aAAa,EAAEC,oBAMX;MALJC,WAAW,EAAEX,gBAKT;MAJJY,aAAW,EAAEF,oBAIT;MAHJG,WAAW,EAAEnB;IAGT,CAVP;wBASE,MAAe,mCAAZU,IAAI,CAACU,OAAI;MAAA;OAAG;;;;KATjB;;IAAA;GAUO,CAVP;;EAAA,GADF;;EAAA,uCAJF;;EAAA","names":["_createElementBlock","id","$props","class","_createElementVNode","$data","onClick","_renderSlot","_ctx","undefined","_Fragment","_renderList","item","index","_createBlock","_component_Item","key","closeDropdown","$options","valueActive","onChangeValue","statusColor","text"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/Dropdown/DropdownBase.vue"],"sourcesContent":["<template>\n  <div :id=\"id\" class=\"dropdown\">\n    <button class=\"btn\" :class=\"classList\" @click=\"isOpen = !isOpen\">\n      <slot />\n    </button>\n    <div class=\"dropdown-list\" :class=\"classList\" v-if=\"isOpen\">\n      <Item\n        v-for=\"(item, index) in arrays\"\n        :key=\"index\"\n        :item=\"item\"\n        :closeDropdown=\"callToClose\"\n        :valueActive=\"valueActive\"\n        @changeValue=\"changeValue\"\n        :statusColor=\"statusColor\"\n      >\n        {{ item.text }}\n      </Item>\n    </div>\n  </div>\n</template>\n<script>\nimport Item from \"./ItemDropdown.vue\";\nexport default {\n  name: \"DropdownBase\",\n  props: {\n    arrays: {\n      type: Array,\n      default: () => [],\n    },\n    id: {\n      type: String,\n      required: true,\n    },\n    text: {\n      type: String,\n    },\n    statusColor: {\n      type: String,\n    },\n    outLine: {\n      type: Boolean,\n    },\n    size: {\n      type: String,\n    },\n    disable: {\n      type: Boolean,\n    },\n    icon: {\n      type: String,\n    },\n    location: {\n      type: String,\n      default: \"bottomLeft\",\n      note: \"location\",\n    },\n  },\n  components: {\n    Item,\n  },\n  data() {\n    return {\n      isOpen: false,\n      valueChecked: 1,\n      isActive: false,\n      classList: \"\",\n    };\n  },\n  created() {\n    this.getClassList();\n    window.addEventListener(\"click\", this.checkClickOn);\n  },\n  watch: {\n    classList() {\n      this.getClassList();\n    },\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"click\", this.checkClickOn);\n  },\n\n  methods: {\n    callToClose() {\n      this.isOpen = false;\n    },\n    changeValue(value) {\n      this.valueChecked = value;\n    },\n    checkClickOn(event) {\n      if (!document.getElementById(this.id).contains(event.target)) {\n        this.isOpen = false;\n      }\n    },\n    getClassList() {\n      this.outLine\n        ? (this.classList = `btn-outline-${this.statusColor}`)\n        : (this.classList = `btn-${this.statusColor}`);\n      if (this.disable) this.classList += \" disable\";\n      switch (this.size) {\n        case \"lg\":\n          this.classList += \" btn-lg\";\n          break;\n        case \"sm\":\n          this.classList += \" btn-sm\";\n          break;\n        case \"xs\":\n          this.classList += \" btn-xs\";\n          break;\n      }\n      switch (this.location) {\n        case \"bottomRight\":\n          this.classList += \" dropdown-bottom-right\";\n          break;\n        case \"bottomLeft\":\n          this.classList += \" dropdown-bottom-left\";\n          break;\n        // case \"xs\":\n        //   this.classList += \" btn-xs\";\n        //   break;\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/style.scss\";\n.btn {\n  position: relative;\n  padding: 10px 20px;\n  // background-color: #747a81;\n  // border: 1px solid #747a81;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:focus {\n    outline: 0px;\n  }\n\n  &:hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n\n  &.isActive {\n    opacity: 1;\n    cursor: pointer;\n  }\n}\n\n.dropdown {\n  position: relative;\n  width: fit-content;\n\n  &-list {\n    background: white;\n    margin-top: 5px;\n    position: absolute;\n    z-index: 10;\n    width: 100%;\n    border: 1px solid black;\n    border-radius: 4px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}