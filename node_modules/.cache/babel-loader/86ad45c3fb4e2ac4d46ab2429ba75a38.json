{"ast":null,"code":"import Item from \"./ItemDropdown.vue\";\nexport default {\n  name: \"DropdownBase\",\n  props: {\n    arrays: {\n      type: Array,\n      default: () => []\n    },\n    id: {\n      type: String,\n      required: true\n    },\n    text: {\n      type: String\n    },\n    statusColor: {\n      type: String\n    },\n    outLine: {\n      type: Boolean\n    },\n    size: {\n      type: String\n    },\n    disable: {\n      type: Boolean\n    },\n    icon: {\n      type: String\n    },\n    location: {\n      type: String,\n      default: \"bottomLeft\",\n      note: \"location\"\n    }\n  },\n  components: {\n    Item\n  },\n\n  data() {\n    return {\n      isOpen: false,\n      valueChecked: 1,\n      isActive: false,\n      classList: \"\"\n    };\n  },\n\n  created() {\n    this.getClassList();\n    window.addEventListener(\"click\", this.checkClickOn);\n  },\n\n  watch: {\n    classList() {\n      this.getClassList();\n    }\n\n  },\n\n  beforeUnmount() {\n    window.removeEventListener(\"click\", this.checkClickOn);\n  },\n\n  methods: {\n    callToClose() {\n      this.isOpen = false;\n    },\n\n    changeValue(value) {\n      this.valueChecked = value;\n    },\n\n    checkClickOn(event) {\n      if (!document.getElementById(this.id).contains(event.target)) {\n        this.isOpen = false;\n      }\n    },\n\n    getClassList() {\n      this.outLine ? this.classList = `btn-outline-${this.statusColor}` : this.classList = `btn-${this.statusColor}`;\n      if (this.disable) this.classList += \" disable\";\n\n      switch (this.size) {\n        case \"lg\":\n          this.classList += \" btn-lg\";\n          break;\n\n        case \"sm\":\n          this.classList += \" btn-sm\";\n          break;\n\n        case \"xs\":\n          this.classList += \" btn-xs\";\n          break;\n      }\n\n      switch (this.location) {\n        case \"bottomRight\":\n          this.classList += \" dropdownbottomRight\";\n          break;\n        // case \"sm\":\n        //   this.classList += \" btn-sm\";\n        //   break;\n        // case \"xs\":\n        //   this.classList += \" btn-xs\";\n        //   break;\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqBA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,eAAe;EACbC,IAAI,EAAE,cADO;EAEbC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,KADA;MAENC,OAAO,EAAE,MAAM;IAFT,CADH;IAKLC,EAAE,EAAE;MACFH,IAAI,EAAEI,MADJ;MAEFC,QAAQ,EAAE;IAFR,CALC;IASLC,IAAI,EAAE;MACJN,IAAI,EAAEI;IADF,CATD;IAYLG,WAAW,EAAE;MACXP,IAAI,EAAEI;IADK,CAZR;IAeLI,OAAO,EAAE;MACPR,IAAI,EAAES;IADC,CAfJ;IAkBLC,IAAI,EAAE;MACJV,IAAI,EAAEI;IADF,CAlBD;IAqBLO,OAAO,EAAE;MACPX,IAAI,EAAES;IADC,CArBJ;IAwBLG,IAAI,EAAE;MACJZ,IAAI,EAAEI;IADF,CAxBD;IA2BLS,QAAQ,EAAE;MACRb,IAAI,EAAEI,MADE;MAERF,OAAO,EAAE,YAFD;MAGRY,IAAI,EAAE;IAHE;EA3BL,CAFM;EAmCbC,UAAU,EAAE;IACVnB;EADU,CAnCC;;EAsCboB,IAAI,GAAG;IACL,OAAO;MACLC,MAAM,EAAE,KADH;MAELC,YAAY,EAAE,CAFT;MAGLC,QAAQ,EAAE,KAHL;MAILC,SAAS,EAAE;IAJN,CAAP;EAMD,CA7CY;;EA8CbC,OAAO,GAAG;IACR,KAAKC,YAAL;IACAC,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKC,YAAtC;EACD,CAjDY;;EAkDbC,KAAK,EAAE;IACLN,SAAS,GAAG;MACV,KAAKE,YAAL;IACD;;EAHI,CAlDM;;EAuDbK,aAAa,GAAG;IACdJ,MAAM,CAACK,mBAAP,CAA2B,OAA3B,EAAoC,KAAKH,YAAzC;EACD,CAzDY;;EA2DbI,OAAO,EAAE;IACPC,WAAW,GAAG;MACZ,KAAKb,MAAL,GAAc,KAAd;IACD,CAHM;;IAIPc,WAAW,CAACC,KAAD,EAAQ;MACjB,KAAKd,YAAL,GAAoBc,KAApB;IACD,CANM;;IAOPP,YAAY,CAACQ,KAAD,EAAQ;MAClB,IAAI,CAACC,QAAQ,CAACC,cAAT,CAAwB,KAAKhC,EAA7B,EAAiCiC,QAAjC,CAA0CH,KAAK,CAACI,MAAhD,CAAL,EAA8D;QAC5D,KAAKpB,MAAL,GAAc,KAAd;MACF;IACD,CAXM;;IAYPK,YAAY,GAAG;MACb,KAAKd,OAAL,GACK,KAAKY,SAAL,GAAkB,eAAc,KAAKb,WAAY,EADtD,GAEK,KAAKa,SAAL,GAAkB,OAAM,KAAKb,WAAY,EAF9C;MAGA,IAAI,KAAKI,OAAT,EAAkB,KAAKS,SAAL,IAAkB,UAAlB;;MAClB,QAAQ,KAAKV,IAAb;QACE,KAAK,IAAL;UACE,KAAKU,SAAL,IAAkB,SAAlB;UACA;;QACF,KAAK,IAAL;UACE,KAAKA,SAAL,IAAkB,SAAlB;UACA;;QACF,KAAK,IAAL;UACE,KAAKA,SAAL,IAAkB,SAAlB;UACA;MATJ;;MAWA,QAAQ,KAAKP,QAAb;QACE,KAAK,aAAL;UACE,KAAKO,SAAL,IAAkB,sBAAlB;UACA;QACF;QACA;QACA;QACA;QACA;QACA;MATF;IAWD;;EAvCM;AA3DI,CAAf","names":["Item","name","props","arrays","type","Array","default","id","String","required","text","statusColor","outLine","Boolean","size","disable","icon","location","note","components","data","isOpen","valueChecked","isActive","classList","created","getClassList","window","addEventListener","checkClickOn","watch","beforeUnmount","removeEventListener","methods","callToClose","changeValue","value","event","document","getElementById","contains","target"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/Dropdown/DropdownBase.vue"],"sourcesContent":["<template>\n  <div :id=\"id\" class=\"dropdown\">\n    <button class=\"btn\" :class=\"classList\" @click=\"isOpen = !isOpen\">\n      <slot />\n    </button>\n    <div class=\"dropdown-list\" v-if=\"isOpen\">\n      <Item\n        v-for=\"(item, index) in arrays\"\n        :key=\"index\"\n        :item=\"item\"\n        :closeDropdown=\"callToClose\"\n        :valueActive=\"valueActive\"\n        @changeValue=\"changeValue\"\n        :statusColor=\"statusColor\"\n      >\n        {{ item.text }}\n      </Item>\n    </div>\n  </div>\n</template>\n<script>\nimport Item from \"./ItemDropdown.vue\";\nexport default {\n  name: \"DropdownBase\",\n  props: {\n    arrays: {\n      type: Array,\n      default: () => [],\n    },\n    id: {\n      type: String,\n      required: true,\n    },\n    text: {\n      type: String,\n    },\n    statusColor: {\n      type: String,\n    },\n    outLine: {\n      type: Boolean,\n    },\n    size: {\n      type: String,\n    },\n    disable: {\n      type: Boolean,\n    },\n    icon: {\n      type: String,\n    },\n    location: {\n      type: String,\n      default: \"bottomLeft\",\n      note: \"location\",\n    },\n  },\n  components: {\n    Item,\n  },\n  data() {\n    return {\n      isOpen: false,\n      valueChecked: 1,\n      isActive: false,\n      classList: \"\",\n    };\n  },\n  created() {\n    this.getClassList();\n    window.addEventListener(\"click\", this.checkClickOn);\n  },\n  watch: {\n    classList() {\n      this.getClassList();\n    },\n  },\n  beforeUnmount() {\n    window.removeEventListener(\"click\", this.checkClickOn);\n  },\n\n  methods: {\n    callToClose() {\n      this.isOpen = false;\n    },\n    changeValue(value) {\n      this.valueChecked = value;\n    },\n    checkClickOn(event) {\n      if (!document.getElementById(this.id).contains(event.target)) {\n        this.isOpen = false;\n      }\n    },\n    getClassList() {\n      this.outLine\n        ? (this.classList = `btn-outline-${this.statusColor}`)\n        : (this.classList = `btn-${this.statusColor}`);\n      if (this.disable) this.classList += \" disable\";\n      switch (this.size) {\n        case \"lg\":\n          this.classList += \" btn-lg\";\n          break;\n        case \"sm\":\n          this.classList += \" btn-sm\";\n          break;\n        case \"xs\":\n          this.classList += \" btn-xs\";\n          break;\n      }\n      switch (this.location) {\n        case \"bottomRight\":\n          this.classList += \" dropdownbottomRight\";\n          break;\n        // case \"sm\":\n        //   this.classList += \" btn-sm\";\n        //   break;\n        // case \"xs\":\n        //   this.classList += \" btn-xs\";\n        //   break;\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/style.scss\";\n.btn {\n  position: relative;\n  padding: 10px 20px;\n  // background-color: #747a81;\n  // border: 1px solid #747a81;\n  cursor: pointer;\n  transition: 0.3s;\n\n  &:focus {\n    outline: 0px;\n  }\n\n  &:hover {\n    opacity: 1;\n    cursor: pointer;\n  }\n\n  &.isActive {\n    opacity: 1;\n    cursor: pointer;\n  }\n}\n\n.dropdown {\n  position: relative;\n  width: fit-content;\n\n  &-list {\n    background: white;\n    margin-top: 5px;\n    position: absolute;\n    z-index: 10;\n    width: 100%;\n    border: 1px solid black;\n    border-radius: 4px;\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}