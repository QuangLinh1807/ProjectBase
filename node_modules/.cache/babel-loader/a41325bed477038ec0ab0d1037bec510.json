{"ast":null,"code":"import config from 'config';\nimport { authHeader } from '../helpers';\nexport const userService = {\n  login,\n  logout,\n  register,\n  getAll,\n  getById,\n  update,\n  delete: _delete\n};\n\nfunction login(username, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  };\n  return fetch(`${config.apiUrl}/users/authenticate`, requestOptions).then(handleResponse).then(user => {\n    // login thành công nếu có một token jwt trong response\n    if (user.token) {\n      // lưu dữ liệu user và token jwt vào local storage để giữ user được log in trong page\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    return user;\n  });\n}\n\nfunction logout() {\n  // xoá user từ local storage để log out\n  localStorage.removeItem('user');\n}\n\nfunction register(user) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\nfunction getById(id) {\n  const requestOptions = {\n    method: 'GET',\n    headers: authHeader()\n  };\n  return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n  const requestOptions = {\n    method: 'PUT',\n    headers: { ...authHeader(),\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(handleResponse);\n}\n\nfunction _delete(id) {\n  const requestOptions = {\n    method: 'DELETE',\n    headers: authHeader()\n  };\n  return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // tự động logout nếu response 401 được trả về từ api\n        logout();\n        location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"names":["config","authHeader","userService","login","logout","register","getAll","getById","update","delete","_delete","username","password","requestOptions","method","headers","body","JSON","stringify","fetch","apiUrl","then","handleResponse","user","token","localStorage","setItem","removeItem","id","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"sources":["/home/dlinh/Documents/BaseProject/base-project/src/services/user.service.js"],"sourcesContent":["import config from 'config';\nimport { authHeader } from '../helpers';\n\nexport const userService = {\n    login,\n    logout,\n    register,\n    getAll,\n    getById,\n    update,\n    delete: _delete\n};\n\nfunction login(username, password) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username, password })\n    };\n\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n        .then(handleResponse)\n        .then(user => {\n            // login thành công nếu có một token jwt trong response\n            if (user.token) {\n                // lưu dữ liệu user và token jwt vào local storage để giữ user được log in trong page\n                localStorage.setItem('user', JSON.stringify(user));\n            }\n\n            return user;\n        });\n}\n\nfunction logout() {\n    // xoá user từ local storage để log out\n    localStorage.removeItem('user');\n}\n\nfunction register(user) {\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/register`, requestOptions).then(handleResponse);\n}\n\nfunction getAll() {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n}\n\n\nfunction getById(id) {\n    const requestOptions = {\n        method: 'GET',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction update(user) {\n    const requestOptions = {\n        method: 'PUT',\n        headers: { ...authHeader(), 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    };\n\n    return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(handleResponse);\n}\n\nfunction _delete(id) {\n    const requestOptions = {\n        method: 'DELETE',\n        headers: authHeader()\n    };\n\n    return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(handleResponse);\n}\n\nfunction handleResponse(response) {\n    return response.text().then(text => {\n        const data = text && JSON.parse(text);\n        if (!response.ok) {\n            if (response.status === 401) {\n                // tự động logout nếu response 401 được trả về từ api\n                logout();\n                location.reload(true);\n            }\n\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        return data;\n    });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}