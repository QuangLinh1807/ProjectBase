{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-a592753a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"mb-2 checkbox\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Checkbox = _resolveComponent(\"Checkbox\");\n\n  return _openBlock(), _createElementBlock(\"ul\", {\n    class: \"multivalent__content\",\n    key: _ctx.keyUpdate\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.categories, item => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: item.id\n    }, [_createElementVNode(\"label\", _hoisted_1, [_createVNode(_component_Checkbox, {\n      value: $props.valueChecked,\n      id: item.id,\n      onChange: $options.handleSelect\n    }, null, 8\n    /* PROPS */\n    , [\"value\", \"id\", \"onChange\"]), _createElementVNode(\"span\", null, _toDisplayString(item.name), 1\n    /* TEXT */\n    )])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;EAGaA,KAAK,EAAC;;;;;uBAFjBC,oBAOK,IAPL,EAOK;IAPDD,KAAK,EAAC,sBAOL;IAP6BE,GAAG,EAAEC;EAOlC,CAPL,sBACEF,oBAKKG,SALL,EAKK,IALL,EAKKC,YALcC,iBAKd,EALMC,IAAkB,IAAd;yBAAfN,oBAKK,IALL,EAKK;MAL2BC,GAAG,EAAEK,IAAI,CAACC;IAKrC,CALL,GACEC,oBAGQ,OAHR,cAGQ,CAFNC,aAAuEC,mBAAvE,EAAuE;MAA5DC,KAAK,EAAEN,mBAAqD;MAAtCE,EAAE,EAAED,IAAI,CAACC,EAA6B;MAAxBK,QAAM,EAAEC;IAAgB,CAAvE;;IAAA,8BAEM,EADNL,oBAA4B,MAA5B,EAA4B,IAA5B,EAA4BM,iBAAnBR,IAAI,CAACS,IAAc,CAA5B,EAAkB;IAAA;IAAlB,CACM,CAHR,EADF;GAKK,CALL;;EAAA,GADF","names":["class","_createElementBlock","key","_ctx","_Fragment","_renderList","$props","item","id","_createElementVNode","_createVNode","_component_Checkbox","value","onChange","$options","_toDisplayString","name"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/Input/SelectionCategories.vue"],"sourcesContent":["<template>\n  <ul class=\"multivalent__content\" :key=\"keyUpdate\">\n    <li v-for=\"item in categories\" :key=\"item.id\">\n      <label class=\"mb-2 checkbox\">\n        <Checkbox :value=\"valueChecked\" :id=\"item.id\" @change=\"handleSelect\" />\n        <span>{{ item.name }}</span>\n      </label>\n    </li>\n  </ul>\n</template>\n<script>\nimport Checkbox from \"./../Checkbox/CheckboxBase.vue\";\nexport default {\n  name: \"SelectionCategories\",\n  components: { Checkbox },\n  props: {\n    valueChecked: {\n      type: Array,\n      default: () => [],\n    },\n    categories: {\n      type: Array,\n    },\n  },\n  data: function () {\n    return {\n      keyUpdate: 0,\n    };\n  },\n  watch: {\n    categories: {\n      handler() {\n        this.keyUpdate++;\n      },\n      deep: true,\n    },\n  },\n  methods: {\n    handleSelect(id) {\n      let dataChange = [];\n      console.log(222111, this.valueChecked);\n      if (this.valueChecked.includes(id))\n        dataChange = this.valueChecked.filter((item) => item !== id);\n      else {\n        dataChange = this.valueChecked;\n        dataChange.push(id);\n      }\n      console.log(111222, this.valueChecked);\n      this.$emit(\"handleChecked\", dataChange);\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n.multivalent__content {\n  list-style: none;\n  li {\n    margin-bottom: 12px;\n    .checkbox {\n      display: flex;\n      input {\n        width: 34px;\n      }\n      span {\n        -webkit-line-clamp: 1;\n        -webkit-box-orient: vertical;\n        overflow: hidden;\n      }\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}