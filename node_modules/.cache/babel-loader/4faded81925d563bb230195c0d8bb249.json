{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = [\"checked\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"input\", {\n    class: \"form-group mr-2\",\n    type: \"checkbox\",\n    checked: $data.checked,\n    onChange: _cache[0] || (_cache[0] = (...args) => $options.onChange && $options.onChange(...args))\n  }, null, 40\n  /* PROPS, HYDRATE_EVENTS */\n  , _hoisted_1);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAKE,OALF,EAKE;IAJAC,KAAK,EAAC,iBAIN;IAHAC,IAAI,EAAC,UAGL;IAFCC,OAAO,EAAEC,aAEV;IADCC,QAAM,yCAAEC,+CAAF;EACP,CALF;;EAAA","names":["_createElementBlock","class","type","checked","$data","onChange","$options"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/Checkbox/CheckboxBase.vue"],"sourcesContent":["<template>\n  <input\n    class=\"form-group mr-2\"\n    type=\"checkbox\"\n    :checked=\"checked\"\n    @change=\"onChange\"\n  />\n</template>\n\n<script>\nexport default {\n  props: {\n    value: {\n      type: Array,\n      default: () => [],\n    },\n    id: {\n      type: Number,\n    },\n  },\n  data() {\n    return {\n      checked: false,\n    };\n  },\n  watch: {\n    value: {\n      handler() {\n        this.checked = this.value.includes(this.id);\n      },\n      deep: true,\n    },\n  },\n  created() {\n    this.checked = this.value?.includes(this.id);\n  },\n  methods: {\n    onChange() {\n      this.$emit(\"change\", this.id);\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module"}