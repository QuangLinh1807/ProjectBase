{"ast":null,"code":"import PageNavigationItem from \"./PageNavigationItem.vue\";\nimport AnimationFadeUp from \"./AnimationFadeUp\";\nexport default {\n  name: \"SideBarMenu\",\n\n  data() {\n    return {\n      freeLocationMenu: [],\n      menus: [],\n      activeUrl: \"\"\n    };\n  },\n\n  components: {\n    PageNavigationItem,\n    AnimationFadeUp\n  },\n\n  created() {\n    this.getListSidebar();\n    this.praiseData();\n  },\n\n  methods: {\n    classData(val) {\n      if (val.title == \"Labor Management Apps\" || val.title == \"労務管理 Apps\") return \"hidden-border-top\";\n    },\n\n    changeCategoryPage(url) {\n      if (!url) this.$router.push({\n        path: `/dashboard`\n      });\n      this.$router.push({\n        path: url\n      });\n    },\n\n    showSubMenu(menuIndex, subMenuIndex, subMenuIndex1, status) {\n      if (subMenuIndex1 == -1) {\n        this.menus[menuIndex].items[subMenuIndex].collapse = !status;\n      } else {\n        this.menus[menuIndex].items[subMenuIndex].items[subMenuIndex1].collapse = !status;\n      }\n    },\n\n    praiseData() {\n      let menuGroup = [];\n\n      if (!this.freeLocationMenu) {\n        return;\n      }\n\n      this.freeLocationMenu.forEach(group => {\n        let menu = {};\n        menu.icon = group.icon ? group.icon : \"\";\n        menu.title = group.name;\n        menu.url = group.url;\n        menu.items = [];\n        group.menuLocation.forEach(submenu => {\n          let obj = {\n            name: submenu.name,\n            url: submenu.url,\n            isOpenNewTab: submenu.isOpenNewTab,\n            iconName: submenu.iconName,\n            collapse: true\n          };\n\n          if (\"menus\" in submenu) {\n            obj.items = submenu.menus.map(i => {\n              i = { ...i,\n                ...{\n                  collapse: true\n                }\n              };\n              return i;\n            });\n          }\n\n          menu.items.push(obj);\n        });\n        menuGroup.push(menu);\n      });\n      this.menus = menuGroup;\n    },\n\n    async getListSidebar() {\n      let menuSidebar = {\n        meta: {\n          taskCount: 2\n        },\n        data: {\n          categories: [{\n            name: \"Menu\",\n            menus: [{\n              url: `/`,\n              name: \"Dashboard\"\n            }, {\n              url: `/button`,\n              name: \"Button\"\n            }, {\n              url: `/dropdown`,\n              name: \"Dropdown\"\n            }, {\n              url: `/modal`,\n              name: \"Modal\"\n            }, {\n              url: `/avatar`,\n              name: \"Avatar\"\n            }, {\n              url: `/avatar`,\n              name: \"Avatar\"\n            }],\n            url: \"\"\n          }]\n        }\n      }; // get sub-category\n\n      this.titleSidebar = menuSidebar.data.title;\n      this.freeLocationMenu = menuSidebar.data.categories.map(item => {\n        return {\n          name: \"\",\n          menuLocation: [item]\n        };\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAqEA,OAAOA,kBAAP,MAA+B,0BAA/B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,eAAe;EACbC,IAAI,EAAE,aADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EADb;MAELC,KAAK,EAAE,EAFF;MAGLC,SAAS,EAAE;IAHN,CAAP;EAKD,CARY;;EASbC,UAAU,EAAE;IAAEP,kBAAF;IAAsBC;EAAtB,CATC;;EAUbO,OAAO,GAAG;IACR,KAAKC,cAAL;IACA,KAAKC,UAAL;EACD,CAbY;;EAcbC,OAAO,EAAE;IACPC,SAAS,CAACC,GAAD,EAAM;MACb,IAAIA,GAAG,CAACC,KAAJ,IAAa,uBAAb,IAAwCD,GAAG,CAACC,KAAJ,IAAa,WAAzD,EACE,OAAO,mBAAP;IACH,CAJM;;IAKPC,kBAAkB,CAACC,GAAD,EAAM;MACtB,IAAI,CAACA,GAAL,EAAU,KAAKC,OAAL,CAAaC,IAAb,CAAkB;QAAEC,IAAI,EAAG;MAAT,CAAlB;MACV,KAAKF,OAAL,CAAaC,IAAb,CAAkB;QAAEC,IAAI,EAAEH;MAAR,CAAlB;IACD,CARM;;IASPI,WAAW,CAACC,SAAD,EAAYC,YAAZ,EAA0BC,aAA1B,EAAyCC,MAAzC,EAAiD;MAC1D,IAAID,aAAY,IAAK,CAAC,CAAtB,EAAyB;QACvB,KAAKlB,KAAL,CAAWgB,SAAX,EAAsBI,KAAtB,CAA4BH,YAA5B,EAA0CI,QAA1C,GAAqD,CAACF,MAAtD;MACF,CAFA,MAEO;QACL,KAAKnB,KAAL,CAAWgB,SAAX,EAAsBI,KAAtB,CAA4BH,YAA5B,EAA0CG,KAA1C,CACEF,aADF,EAEEG,QAFF,GAEa,CAACF,MAFd;MAGF;IACD,CAjBM;;IAkBPd,UAAU,GAAG;MACX,IAAIiB,SAAQ,GAAI,EAAhB;;MACA,IAAI,CAAC,KAAKvB,gBAAV,EAA4B;QAC1B;MACF;;MACA,KAAKA,gBAAL,CAAsBwB,OAAtB,CAA+BC,KAAD,IAAW;QACvC,IAAIC,IAAG,GAAI,EAAX;QACAA,IAAI,CAACC,IAAL,GAAYF,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAnB,GAA0B,EAAtC;QACAD,IAAI,CAAChB,KAAL,GAAae,KAAK,CAAC3B,IAAnB;QACA4B,IAAI,CAACd,GAAL,GAAWa,KAAK,CAACb,GAAjB;QACAc,IAAI,CAACL,KAAL,GAAa,EAAb;QACAI,KAAK,CAACG,YAAN,CAAmBJ,OAAnB,CAA4BK,OAAD,IAAa;UACtC,IAAIC,GAAE,GAAI;YACRhC,IAAI,EAAE+B,OAAO,CAAC/B,IADN;YAERc,GAAG,EAAEiB,OAAO,CAACjB,GAFL;YAGRmB,YAAY,EAAEF,OAAO,CAACE,YAHd;YAIRC,QAAQ,EAAEH,OAAO,CAACG,QAJV;YAKRV,QAAQ,EAAE;UALF,CAAV;;UAOA,IAAI,WAAWO,OAAf,EAAwB;YACtBC,GAAG,CAACT,KAAJ,GAAYQ,OAAO,CAAC5B,KAAR,CAAcgC,GAAd,CAAmBC,CAAD,IAAO;cACnCA,IAAI,EAAE,GAAGA,CAAL;gBAAQ,GAAG;kBAAEZ,QAAQ,EAAE;gBAAZ;cAAX,CAAJ;cACA,OAAOY,CAAP;YACD,CAHW,CAAZ;UAIF;;UACAR,IAAI,CAACL,KAAL,CAAWP,IAAX,CAAgBgB,GAAhB;QACD,CAfD;QAgBAP,SAAS,CAACT,IAAV,CAAeY,IAAf;MACD,CAvBD;MAwBA,KAAKzB,KAAL,GAAasB,SAAb;IACD,CAhDM;;IAiDP,MAAMlB,cAAN,GAAuB;MACrB,IAAI8B,WAAU,GAAI;QAChBC,IAAI,EAAE;UACJC,SAAS,EAAE;QADP,CADU;QAIhBtC,IAAI,EAAE;UACJuC,UAAU,EAAE,CACV;YACExC,IAAI,EAAE,MADR;YAEEG,KAAK,EAAE,CACL;cACEW,GAAG,EAAG,GADR;cAEEd,IAAI,EAAE;YAFR,CADK,EAKL;cACEc,GAAG,EAAG,SADR;cAEEd,IAAI,EAAE;YAFR,CALK,EASL;cACEc,GAAG,EAAG,WADR;cAEEd,IAAI,EAAE;YAFR,CATK,EAaL;cACEc,GAAG,EAAG,QADR;cAEEd,IAAI,EAAE;YAFR,CAbK,EAiBL;cACEc,GAAG,EAAG,SADR;cAEEd,IAAI,EAAE;YAFR,CAjBK,EAqBL;cACEc,GAAG,EAAG,SADR;cAEEd,IAAI,EAAE;YAFR,CArBK,CAFT;YA4BEc,GAAG,EAAE;UA5BP,CADU;QADR;MAJU,CAAlB,CADqB,CAwCrB;;MACA,KAAK2B,YAAL,GAAoBJ,WAAW,CAACpC,IAAZ,CAAiBW,KAArC;MACA,KAAKV,gBAAL,GAAwBmC,WAAW,CAACpC,IAAZ,CAAiBuC,UAAjB,CAA4BL,GAA5B,CAAiCO,IAAD,IAAU;QAChE,OAAO;UACL1C,IAAI,EAAE,EADD;UAEL8B,YAAY,EAAE,CAACY,IAAD;QAFT,CAAP;MAID,CALuB,CAAxB;IAMD;;EAjGM;AAdI,CAAf","names":["PageNavigationItem","AnimationFadeUp","name","data","freeLocationMenu","menus","activeUrl","components","created","getListSidebar","praiseData","methods","classData","val","title","changeCategoryPage","url","$router","push","path","showSubMenu","menuIndex","subMenuIndex","subMenuIndex1","status","items","collapse","menuGroup","forEach","group","menu","icon","menuLocation","submenu","obj","isOpenNewTab","iconName","map","i","menuSidebar","meta","taskCount","categories","titleSidebar","item"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/SideBar/SideBarMenu.vue"],"sourcesContent":["<template>\n  <!-- <sidebar-menu :menu=\"menu\" :hideToggle=\"false\" :theme=\"theme\" /> -->\n  <div class=\"page-navigation-inner\">\n    <div class=\"page-navigation-title\">\n      <div class=\"icon\">\n        <img src=\"\" alt=\"\" />\n      </div>\n      <div class=\"name\" :title=\"titleSidebar\">\n        <span>{{ titleSidebar }}</span>\n      </div>\n    </div>\n    <div\n      class=\"sidebar-list\"\n      v-for=\"(menu, menuIndex) in menus\"\n      :key=\"menuIndex\"\n      :class=\"classData(menu)\"\n    >\n      <div class=\"sidebar-title\" v-if=\"menu.title\">\n        <div class=\"icon\" v-if=\"menu.icon\">\n          <i :class=\"menu.icon ? menu.icon : ''\"></i>\n        </div>\n        <div class=\"name\" :title=\"menu.title\">\n          <span>{{ menu.title }}</span>\n        </div>\n      </div>\n      <div\n        v-for=\"(submenu, subMenuIndex) in menu.items\"\n        :key=\"subMenuIndex\"\n        style=\"width: 100%\"\n      >\n        <PageNavigationItem\n          :name=\"submenu.name\"\n          :url=\"submenu.url\"\n          :icon=\"submenu.iconName\"\n          :hasGroup=\"submenu.items && submenu.items.length > 0\"\n          :collapsed=\"submenu.collapse\"\n          @handleClickShowSubMenu=\"\n            showSubMenu(menuIndex, subMenuIndex, -1, submenu.collapse)\n          \"\n          :id=\"null\"\n        />\n        <AnimationFadeUp>\n          <div\n            v-if=\"!!submenu.items\"\n            style=\"padding-left: 12px\"\n            v-show=\"submenu.collapse\"\n          >\n            <div\n              v-for=\"(submenu1, subMenuIndex1) in submenu.items\"\n              :key=\"subMenuIndex1\"\n            >\n              <PageNavigationItem\n                :name=\"submenu1.name\"\n                :url=\"submenu1.url\"\n                :icon=\"submenu1.iconName\"\n                :hasGroup=\"submenu1.items && submenu1.items.length > 0\"\n                :collapsed=\"submenu1.collapse\"\n                :id=\"submenu1.id\"\n                @onRedirect=\"changeCategoryPage(submenu1.url)\"\n              />\n            </div>\n          </div>\n        </AnimationFadeUp>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport PageNavigationItem from \"./PageNavigationItem.vue\";\nimport AnimationFadeUp from \"./AnimationFadeUp\";\nexport default {\n  name: \"SideBarMenu\",\n  data() {\n    return {\n      freeLocationMenu: [],\n      menus: [],\n      activeUrl: \"\",\n    };\n  },\n  components: { PageNavigationItem, AnimationFadeUp },\n  created() {\n    this.getListSidebar();\n    this.praiseData();\n  },\n  methods: {\n    classData(val) {\n      if (val.title == \"Labor Management Apps\" || val.title == \"労務管理 Apps\")\n        return \"hidden-border-top\";\n    },\n    changeCategoryPage(url) {\n      if (!url) this.$router.push({ path: `/dashboard` });\n      this.$router.push({ path: url });\n    },\n    showSubMenu(menuIndex, subMenuIndex, subMenuIndex1, status) {\n      if (subMenuIndex1 == -1) {\n        this.menus[menuIndex].items[subMenuIndex].collapse = !status;\n      } else {\n        this.menus[menuIndex].items[subMenuIndex].items[\n          subMenuIndex1\n        ].collapse = !status;\n      }\n    },\n    praiseData() {\n      let menuGroup = [];\n      if (!this.freeLocationMenu) {\n        return;\n      }\n      this.freeLocationMenu.forEach((group) => {\n        let menu = {};\n        menu.icon = group.icon ? group.icon : \"\";\n        menu.title = group.name;\n        menu.url = group.url;\n        menu.items = [];\n        group.menuLocation.forEach((submenu) => {\n          let obj = {\n            name: submenu.name,\n            url: submenu.url,\n            isOpenNewTab: submenu.isOpenNewTab,\n            iconName: submenu.iconName,\n            collapse: true,\n          };\n          if (\"menus\" in submenu) {\n            obj.items = submenu.menus.map((i) => {\n              i = { ...i, ...{ collapse: true } };\n              return i;\n            });\n          }\n          menu.items.push(obj);\n        });\n        menuGroup.push(menu);\n      });\n      this.menus = menuGroup;\n    },\n    async getListSidebar() {\n      let menuSidebar = {\n        meta: {\n          taskCount: 2,\n        },\n        data: {\n          categories: [\n            {\n              name: \"Menu\",\n              menus: [\n                {\n                  url: `/`,\n                  name: \"Dashboard\",\n                },\n                {\n                  url: `/button`,\n                  name: \"Button\",\n                },\n                {\n                  url: `/dropdown`,\n                  name: \"Dropdown\",\n                },\n                {\n                  url: `/modal`,\n                  name: \"Modal\",\n                },\n                {\n                  url: `/avatar`,\n                  name: \"Avatar\",\n                },\n                {\n                  url: `/avatar`,\n                  name: \"Avatar\",\n                },\n              ],\n              url: \"\",\n            },\n          ],\n        },\n      };\n      // get sub-category\n      this.titleSidebar = menuSidebar.data.title;\n      this.freeLocationMenu = menuSidebar.data.categories.map((item) => {\n        return {\n          name: \"\",\n          menuLocation: [item],\n        };\n      });\n    },\n  },\n};\n</script>\n<style>\n.page-navigation-inner {\n  width: 100%;\n  margin-left: 20px;\n}\n</style>"]},"metadata":{},"sourceType":"module"}