{"ast":null,"code":"// import config from \"config\";\n// import { authHeader } from \"../helpers\";\n// export const userService = {\n//   login,\n//   logout,\n//   register,\n//   getAll,\n//   getById,\n//   update,\n//   delete: _delete,\n// };\n// function login(username, password) {\n//   const requestOptions = {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ username, password }),\n//   };\n//   return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n//     .then(handleResponse)\n//     .then((user) => {\n//       // login thành công nếu có một token jwt trong response\n//       if (user.token) {\n//         // lưu dữ liệu user và token jwt vào local storage để giữ user được log in trong page\n//         localStorage.setItem(\"user\", JSON.stringify(user));\n//       }\n//       return user;\n//     });\n// }\n// function logout() {\n//   // xoá user từ local storage để log out\n//   localStorage.removeItem(\"user\");\n// }\n// function register(user) {\n//   const requestOptions = {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(user),\n//   };\n//   return fetch(`${config.apiUrl}/users/register`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n// function getAll() {\n//   const requestOptions = {\n//     method: \"GET\",\n//     headers: authHeader(),\n//   };\n//   return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n// }\n// function getById(id) {\n//   const requestOptions = {\n//     method: \"GET\",\n//     headers: authHeader(),\n//   };\n//   return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n// function update(user) {\n//   const requestOptions = {\n//     method: \"PUT\",\n//     headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(user),\n//   };\n//   return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n// function _delete(id) {\n//   const requestOptions = {\n//     method: \"DELETE\",\n//     headers: authHeader(),\n//   };\n//   return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n// function handleResponse(response) {\n//   return response.text().then((text) => {\n//     const data = text && JSON.parse(text);\n//     if (!response.ok) {\n//       if (response.status === 401) {\n//         // tự động logout nếu response 401 được trả về từ api\n//         logout();\n//         location.reload(true);\n//       }\n//       const error = (data && data.message) || response.statusText;\n//       return Promise.reject(error);\n//     }\n//     return data;\n//   });\n// }","map":{"version":3,"names":[],"sources":["/home/dlinh/Documents/BaseProject/base-project/src/services/user.service.js"],"sourcesContent":["// import config from \"config\";\n// import { authHeader } from \"../helpers\";\n\n// export const userService = {\n//   login,\n//   logout,\n//   register,\n//   getAll,\n//   getById,\n//   update,\n//   delete: _delete,\n// };\n\n// function login(username, password) {\n//   const requestOptions = {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({ username, password }),\n//   };\n\n//   return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\n//     .then(handleResponse)\n//     .then((user) => {\n//       // login thành công nếu có một token jwt trong response\n//       if (user.token) {\n//         // lưu dữ liệu user và token jwt vào local storage để giữ user được log in trong page\n//         localStorage.setItem(\"user\", JSON.stringify(user));\n//       }\n\n//       return user;\n//     });\n// }\n\n// function logout() {\n//   // xoá user từ local storage để log out\n//   localStorage.removeItem(\"user\");\n// }\n\n// function register(user) {\n//   const requestOptions = {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(user),\n//   };\n\n//   return fetch(`${config.apiUrl}/users/register`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n\n// function getAll() {\n//   const requestOptions = {\n//     method: \"GET\",\n//     headers: authHeader(),\n//   };\n\n//   return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\n// }\n\n// function getById(id) {\n//   const requestOptions = {\n//     method: \"GET\",\n//     headers: authHeader(),\n//   };\n\n//   return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n\n// function update(user) {\n//   const requestOptions = {\n//     method: \"PUT\",\n//     headers: { ...authHeader(), \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify(user),\n//   };\n\n//   return fetch(`${config.apiUrl}/users/${user.id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n\n// function _delete(id) {\n//   const requestOptions = {\n//     method: \"DELETE\",\n//     headers: authHeader(),\n//   };\n\n//   return fetch(`${config.apiUrl}/users/${id}`, requestOptions).then(\n//     handleResponse\n//   );\n// }\n\n// function handleResponse(response) {\n//   return response.text().then((text) => {\n//     const data = text && JSON.parse(text);\n//     if (!response.ok) {\n//       if (response.status === 401) {\n//         // tự động logout nếu response 401 được trả về từ api\n//         logout();\n//         location.reload(true);\n//       }\n\n//       const error = (data && data.message) || response.statusText;\n//       return Promise.reject(error);\n//     }\n\n//     return data;\n//   });\n// }\n"],"mappings":"AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA"},"metadata":{},"sourceType":"script"}