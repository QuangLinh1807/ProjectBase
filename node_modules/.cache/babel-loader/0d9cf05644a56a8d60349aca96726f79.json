{"ast":null,"code":"import { normalizeClass as _normalizeClass, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-61f69260\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"src\"];\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"text-xl\"\n}, \"aaa\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = [_hoisted_2];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    class: _normalizeClass([\"avatar placeholder\", $data.statusClass])\n  }, [$props.imgList ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: _normalizeClass($data.avatarClass)\n  }, [_createElementVNode(\"img\", {\n    class: _normalizeClass($data.imgClass),\n    src: $props.imgList\n  }, null, 10\n  /* CLASS, PROPS */\n  , _hoisted_1)], 2\n  /* CLASS */\n  )) : (_openBlock(), _createElementBlock(\"div\", {\n    key: 1,\n    class: _normalizeClass([\"no-img\", $data.avatarClass])\n  }, _hoisted_3, 2\n  /* CLASS */\n  ))], 2\n  /* CLASS */\n  );\n}","map":{"version":3,"mappings":";;;;;;gEAMMA,oBAAgC,MAAhC,EAAgC;EAA1BC,KAAK,EAAC;AAAoB,CAAhC,EAAsB,KAAtB,EAAyB;AAAA;AAAzB;;oBAAAC;;uBALJC,oBAOM,KAPN,EAOM;IAPDF,KAAK,mBAAC,oBAAD,EAA8BG,iBAA9B;EAOJ,CAPN,GACaC,gCAAXF,oBAEM,KAFN,EAEM;UAAA;IAFeF,KAAK,kBAAEG,iBAAF;EAEpB,CAFN,GACEJ,oBAAwC,KAAxC,EAAwC;IAAlCC,KAAK,kBAAEG,cAAF,CAA6B;IAAhBE,GAAG,EAAED;EAAW,CAAxC;;EAAA,cADF;;EAAA,oBAGAF,oBAEM,KAFN,EAEM;UAAA;IAFDF,KAAK,mBAAC,QAAD,EAAyBG,iBAAzB;EAEJ,CAFN;;EAAA,GAJF;;EAAA","names":["_createElementVNode","class","_hoisted_2","_createElementBlock","$data","$props","src"],"sourceRoot":"","sources":["/home/dlinh/Documents/BaseProject/base-project/src/components/Avatar/AvatarBase.vue"],"sourcesContent":["<template>\n  <div class=\"avatar placeholder\" :class=\"statusClass\">\n    <div v-if=\"imgList\" :class=\"avatarClass\">\n      <img :class=\"imgClass\" :src=\"imgList\" />\n    </div>\n    <div class=\"no-img\" v-else :class=\"avatarClass\">\n      <span class=\"text-xl\">aaa</span>\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  props: {\n    size: {\n      type: String,\n      default: \"lg\",\n    },\n    round: {\n      type: String,\n      default: \"xl\",\n    },\n    status: {\n      type: String,\n      default: \"\",\n    },\n    imgList: {\n      type: String,\n    },\n  },\n  data() {\n    return {\n      avatarClass: \"\",\n      imgClass: \"\",\n      statusClass: \"\",\n    };\n  },\n  components: {},\n  created() {\n    this.getClassList();\n  },\n  watch: {\n    classList() {\n      this.getClassList();\n    },\n  },\n  methods: {\n    getClassList() {\n      switch (this.size) {\n        case \"lg\":\n          this.avatarClass += \" w-24\";\n          break;\n        case \"nm\":\n          this.avatarClass += \" w-16\";\n          break;\n        case \"sm\":\n          this.avatarClass += \" w-12\";\n          break;\n        case \"xs\":\n          this.avatarClass += \" w-8\";\n          break;\n      }\n      this.imgClass = this.round == \"xl\" ? \" rounded-xl\" : \" rounded-full\";\n      if (this.status == \"online\") {\n        this.statusClass = \" online\";\n      } else if (this.status == \"offline\") {\n        this.statusClass = \" offline\";\n      } else this.statusClass = \"\";\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n@import \"@/assets/css/style.scss\";\n.avatar {\n  position: relative;\n  display: inline-flex;\n  margin: 0 10px;\n  div {\n    display: block;\n    aspect-ratio: 1/1;\n    overflow: hidden;\n  }\n  img {\n    height: auto;\n    width: 100%;\n    object-fit: cover;\n  }\n  .text-xl {\n    font-size: 1.25rem;\n    line-height: 1.75rem;\n  }\n}\n.placeholder {\n  .no-img {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #000;\n    color\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}